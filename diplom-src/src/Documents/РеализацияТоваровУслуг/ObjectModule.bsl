
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Ответственный = Пользователи.ТекущийПользователь();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	СуммаДокумента = Товары.Итог("Сумма") + Услуги.Итог("Сумма");
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)

	Движения.ОбработкаЗаказов.Записывать = Истина;
	Движения.ОстаткиТоваров.Записывать = Истина;
	
	Движение = Движения.ОбработкаЗаказов.Добавить();
	Движение.Период = Дата;
	Движение.Контрагент = Контрагент;
	Движение.Договор = Договор;
	Движение.Заказ = Основание;
	Движение.СуммаОтгрузки = СуммаДокумента;

	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.ОстаткиТоваров.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Контрагент = Контрагент;
		Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
		Движение.Сумма = ТекСтрокаТовары.Сумма;
		Движение.Количество = ТекСтрокаТовары.Количество;
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказПокупателя.Организация КАК Организация,
	               |	ЗаказПокупателя.Контрагент КАК Контрагент,
	               |	ЗаказПокупателя.Договор КАК Договор,
	               |	ЗаказПокупателя.СуммаДокумента КАК СуммаДокумента,
	               |	ЗаказПокупателя.Товары.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Товары,
	               |	ЗаказПокупателя.Услуги.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Услуги
	               |ИЗ
	               |	Документ.ЗаказПокупателя КАК ЗаказПокупателя
	               |ГДЕ
	               |	ЗаказПокупателя.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Не Выборка.Следующий() Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	
	ТоварыОснования = Выборка.Товары.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Товары.Добавить(), ТоварыОснования);
	КонецЦикла;
	
	УслугиОснования = Выборка.Услуги.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Услуги.Добавить(), УслугиОснования);
	КонецЦикла;
	
	Основание = ДанныеЗаполнения;
	
КонецПроцедуры

//++ВКМ_Выполнение команды заполнения табличной части документа по условию наличия абонентской платы договора и 
        //номенклатуры в константах.
Процедура ВКМ_ВыполнитьАвтозаполнение() Экспорт
	
	НомАП = Константы.ВКМ_НоменклатураАбонентскаяПлата.Получить();
	НомРС = Константы.ВКМ_НоменклатураРаботыСпециалиста.Получить();
	
	Если НомАП <> НомРС Тогда
		
		Результат = СтрШаблон("Проверьте наличие номенклатуры в обоих константах!");
		ОбщегоНазначения.СообщитьПользователю(Результат);
		Возврат;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СУММА(ВКМ_ВыполненныеКлиентуРаботыОбороты.КоличествоЧасовПриход) КАК Количество,
	|	СУММА(ВКМ_ВыполненныеКлиентуРаботыОбороты.СуммаКОплатеПриход) КАК Сумма,
	|	СУММА(ВКМ_ВыполненныеКлиентуРаботыОбороты.СуммаКОплатеПриход /
	|		ВКМ_ВыполненныеКлиентуРаботыОбороты.КоличествоЧасовПриход) КАК Цена,
	|	ДоговорыКонтрагентов.ВКМ_АбонентскаяПлата КАК ВКМ_АбонентскаяПлата
	|ИЗ
	|	РегистрНакопления.ВКМ_ВыполненныеКлиентуРаботы.Обороты(&НачалоПериода, &КонецПериода,, Договор = &Договор) КАК
	|		ВКМ_ВыполненныеКлиентуРаботыОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|		ПО ВКМ_ВыполненныеКлиентуРаботыОбороты.Договор = ДоговорыКонтрагентов.Ссылка
	|ГДЕ
	|	ВКМ_ВыполненныеКлиентуРаботыОбороты.СуммаКОплатеПриход <> 0
	|	И ДоговорыКонтрагентов.ВКМ_АбонентскаяПлата <> 0
	|СГРУППИРОВАТЬ ПО
	|	ДоговорыКонтрагентов.ВКМ_АбонентскаяПлата";
	
	Запрос.УстановитьПараметр("Договор", ЭтотОбъект.Договор);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Дата));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Результат = СтрШаблон("Заполните сумму абонентской платы в договоре!");			
		ОбщегоНазначения.СообщитьПользователю(Результат);	
		Отказ = Истина;
	КонецЕсли;
	
	Услуги.Очистить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий()Цикл
		
		СтрокаТЧ = Услуги.Добавить();
		СтрокаТЧ.Номенклатура = НомАП;
		СтрокаТЧ.ВКМ_АбонентскаяПлата = Выборка.ВКМ_АбонентскаяПлата;
		СтрокаТЧ.Количество = Выборка.Количество;
		СтрокаТЧ.Сумма = Выборка.Сумма;
		СтрокаТЧ.Цена = Выборка.Цена;				
		
	КонецЦикла;	
	
КонецПроцедуры
//--ВКМ_Выполнение команды заполнения табличной части документа по условию наличия абонентской платы договора и 
        //номенклатуры в константах.

#КонецОбласти

#КонецЕсли
